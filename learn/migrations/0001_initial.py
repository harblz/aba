# Generated by Django 5.1.1 on 2024-09-30 18:39

import django.contrib.postgres.fields.hstore
from django.contrib.postgres.operations import HStoreExtension
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=100)),
                (
                    "weights",
                    django.contrib.postgres.fields.hstore.HStoreField(
                        verbose_name="# of questions per category"
                    ),
                ),
                ("course_data", models.JSONField()),
            ],
            options={
                "db_table_comment": "The competency, license, or topic of interest",
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page", models.IntegerField()),
                ("title", models.CharField(max_length=100)),
                ("content", django_ckeditor_5.fields.CKEditor5Field()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="learn.course",
                    ),
                ),
            ],
            options={
                "db_table_comment": "Lesson pages for each course",
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table_comment": "Profiles for learner tracking linked to django.contrib.auth.user",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("area", models.CharField(max_length=1)),
                ("area_name", models.CharField(max_length=50)),
                ("task", models.IntegerField()),
                ("task_desc", models.CharField(max_length=100)),
                (
                    "license",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="learn.course",
                    ),
                ),
            ],
            options={
                "db_table_comment": "Tasks for RBT, BCaBA, and BCBA according to the BACB",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("license", "area", "task"), name="unique_tasks"
                    )
                ],
            },
        ),
    ]
